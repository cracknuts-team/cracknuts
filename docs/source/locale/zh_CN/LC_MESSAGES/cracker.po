# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, CrackNuts
# This file is distributed under the same license as the CrackNuts package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CrackNuts 0.6.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-09 14:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/cracker.rst:2
msgid "Cracker"
msgstr ""

#: ../../source/cracker.rst:4
msgid ""
"The `Cracker` module includes all operations on the device, such as "
"device configuration, data transmission, and acquisition."
msgstr "`Cracker` 模块包含了所有对设备的操作，包括设备配置、数据下发采集等。"

#: cracknuts.cracker.cracker_basic.ConfigBasic:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: cracknuts.cracker.cracker_basic.ConfigBasic.dump_to_json:1 of
msgid "Dump the configuration to a JSON string."
msgstr "到处配置到 JSON 字符串"

#: ../../source/cracker.rst
msgid "Return type"
msgstr "返回类型"

#: cracknuts.cracker.cracker_basic.ConfigBasic.dump_to_json:5 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`str\\``"
msgstr ""

#: cracknuts.cracker.cracker_basic.ConfigBasic.load_from_json:1 of
msgid ""
"Load configuration from a JSON string. If a value in the JSON string is "
"null, it will be skipped, and the default configuration will be used."
msgstr "从 JSON 字符串加载配置文件。如果字符串是空则加载默认配置文件"

#: cracknuts.cracker.cracker_basic.ConfigBasic.load_from_json:6 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~cracknuts.cracker.cracker\\_basic.ConfigBasic\\``"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic:1 of
msgid ""
"Bases: :py:class:`~abc.ABC`, :py:class:`~typing.Generic`\\ "
"[:py:obj:`~cracknuts.cracker.cracker_basic.T`]"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic:1 of
msgid ""
"The basic device class, provides support for the `CNP` protocol, "
"configuration management, firmware maintenance, and other basic "
"operations."
msgstr "基础设备类，提供 `CNP` 协议支持、配置管理、固件维护等基础操作。"

#: cracknuts.cracker.cracker_basic.CrackerBasic:4 of
msgid ""
"For firmware updates, in the `Cracker` architecture, the host computer "
"will attempt to update the latest firmware files from the following "
"directories each time it connects to the device:"
msgstr "对于固件更新，在 `Cracker` 架构中，上位机在每次连接设备时都会尝试更新以下目录中的最新的固件文件："

#: cracknuts.cracker.cracker_basic.CrackerBasic:7 of
msgid ""
"The directory carried by the current package: <site-"
"packages>/cracknuts/bin"
msgstr "当前安装包所携带：<site-packages>/cracknuts/bin"

#: cracknuts.cracker.cracker_basic.CrackerBasic:8 of
msgid "The user directory: ~/.cracknuts/bin"
msgstr "用户目录: ~/.cracknuts/bin"

#: cracknuts.cracker.cracker_basic.CrackerBasic:9 of
msgid "The working directory: <work-directory>/.bin"
msgstr "工作目录：<work-directory>/.bin"

#: cracknuts.cracker.cracker_basic.CrackerBasic:11 of
msgid ""
"Users can obtain the latest firmware by updating `cracknuts`. After "
"downloading the latest firmware from the official website, simply place "
"it in the working directory or user directory."
msgstr "用户可以通过更新`cracknuts`方式获取最新的固件，获取到官网下载最新固件后放置到工作目录或用户目录下即可。"

#: ../../source/cracker.rst
msgid "Parameters"
msgstr "参数"

#: cracknuts.cracker.cracker_basic.CrackerBasic.__init__:2 of
msgid ""
"Cracker device address (ip, port) or \"[cnp://]<ip>[:port]\", If no "
"configuration is provided here, it needs to be configured later by "
"calling `set_address`, `set_ip_port`, or `set_uri`."
msgstr ""
"Cracker设备地址：(ip, port) 或者 \"cnp://<ip>:<port>\" "
"格式，如果这里没有配置，后续则需要调用`set_address`, `set_ip_port`, 或者 `set_uri`进行配置。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.__init__:7 of
msgid ""
"The bin_server (firmware) file for updates; normally, the user should not"
" specify this."
msgstr "需要更新的 bin_server（固件）文件，一般无需用户配置。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.__init__:10 of
msgid ""
"The bin_bitstream (firmware) file for updates; normally, the user should "
"not specify this."
msgstr "需要更新的 bin_bitstream（固件）文件，一般无需用户配置。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.__init__:14 of
msgid "The operator port to connect to."
msgstr "operator 端口"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:1 of
msgid "Connect to cracker device."
msgstr "连接到cracker设备"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:4 of
msgid "Whether to update the firmware."
msgstr "是否更新固件"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:7 of
msgid ""
"Whether to force update the firmware while the device is running normally"
" (by default, firmware updates are not performed when the device is "
"running normally)."
msgstr "在设备正常运行时是否强制更新固件（默认情况下，设备正常运行情况下固件不进行更新）"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:11 of
msgid "The bin_server (firmware) file for updates."
msgstr "需要更新的 bin_server（固件）文件"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:14 of
msgid "The bin_bitstream (firmware) file for updates."
msgstr "需要更新的 bin_bitstream（固件）文件"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:16
#: cracknuts.cracker.cracker_basic.CrackerBasic.disconnect:3
#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_file:6
#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_str:6
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_address:6
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_ip_port:9
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_logging_level:6
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_uri:6 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:obj\\:\\`None\\``"
msgstr ""

#: ../../source/cracker.rst
msgid "Returns"
msgstr "返回"

#: cracknuts.cracker.cracker_basic.CrackerBasic.connect:17
#: cracknuts.cracker.cracker_basic.CrackerBasic.disconnect:4
#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_file:7
#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_str:7
#: cracknuts.cracker.cracker_basic.CrackerBasic.reconnect:3
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_address:7
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_ip_port:10
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_uri:7 of
msgid "None"
msgstr "无"

#: cracknuts.cracker.cracker_basic.CrackerBasic.disconnect:1 of
msgid "Disconnect from cracker device."
msgstr "断开连接"

#: cracknuts.cracker.cracker_basic.CrackerBasic.dump_config:1 of
msgid ""
"Dump the current config to a JSON file if a path is specified, or to a "
"JSON string if no path is specified."
msgstr "导出当前配置，如果指定了path则导出JSON文件，否则导出json字符串。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.dump_config:4
#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_file:4 of
msgid "the path to the JSON file"
msgstr "JSON文件路径"

#: cracknuts.cracker.cracker_basic.CrackerBasic.dump_config:6 of
msgid "the content of JSON string or None if no path is specified."
msgstr "在path没有配置的抢矿下返回配置文件的JSON字符串，否则返回None。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_address:1 of
msgid "Get the device address in tuple format."
msgstr "获取设备元组形式的地址"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_address:3
#: cracknuts.cracker.cracker_basic.CrackerBasic.set_address:4 of
msgid "address in tuple format: (ip, port)."
msgstr "元组形式的地址：(ip, port)。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_connection_status:1 of
msgid "Get connection status."
msgstr "获取连接状态"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_connection_status:3 of
msgid "True for connected and False for disconnected."
msgstr "True：已连接，False：未连接。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_current_config:1 of
msgid ""
"Get current configuration of `Cracker`. Note: Currently, the "
"configuration returned is recorded on the host computer, not the ACTUAL "
"configuration of the device. In the future, it should be synchronized "
"from the device to the host computer."
msgstr "获取设备的当前的配置信息。注意：当前返回的是上位机记录的配置信息，并不是设备真实的配置。需要实现。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_current_config:6 of
msgid "Current configuration of `Cracker`."
msgstr "Cracker的当前配置信息"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_default_config:1
#: cracknuts.cracker.cracker_s1.CrackerS1.get_default_config:1 of
msgid ""
"Get the default configuration. This method needs to be implemented by the"
" specific device class, as different devices have different default "
"configurations."
msgstr "获取默认配置。因为不同设备有不同的默认之，该方法需要具体的设备子类实现。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_default_config:4
#: cracknuts.cracker.cracker_s1.CrackerS1.get_default_config:4 of
msgid "The default config object(The specific subclass of CommonConfig)."
msgstr "默认配置对象（CommonConfig 的具体实现类）"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_id:1 of
msgid "Get the ID of the equipment."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_id:3 of
msgid "The equipment response status code and the ID of the equipment."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_name:1 of
msgid "Get the name of the equipment."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_name:3 of
msgid "The equipment response status code and the name of the equipment."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_operator:1 of
msgid "Get the operator object for this Cracker instance."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_operator:3 of
msgid "Operator object."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_uri:1 of
msgid "Get the device address in URI format."
msgstr "获取URI格式的设备地址"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_uri:3 of
msgid "URI. if cracker address is not specified, None is returned."
msgstr "URI地址，如果 Cracker 地址没有指定则返回空。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_version:1 of
msgid "Get the version of the equipment."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.get_version:3 of
msgid "The equipment response status code and the version of the equipment."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_file:1 of
msgid "Load config from a JSON file."
msgstr "从JSON文件中加载配置。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_str:1 of
msgid "Load config from a JSON string."
msgstr "从JSON字符串中加载配置。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_str:4 of
msgid "the JSON string"
msgstr "JSON字符串"

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_force:1 of
msgid "Force produce a wave data."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_force:3
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_freq:6
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_timeout_ms:6
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_mv:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_disable:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_enable:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_gain:9
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_phase:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_rate:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_delay:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_len:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_set_analog_channel_enable:9
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_edge:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_level:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_mode:6
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_source:7
#: cracknuts.cracker.cracker_s1.CrackerS1.register_write:11 of
msgid "The device response status"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_analog_wave:1 of
msgid "Get the analog wave."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_analog_wave:4 of
msgid "the channel of the analog wave."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_analog_wave:7 of
msgid "the offset of the analog wave."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_analog_wave:10 of
msgid "the sample count of the analog wave."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_analog_wave:12 of
msgid "the analog wave."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_digital_wave:2 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`int\\`\\, "
"\\:py\\:class\\:\\`\\~numpy.ndarray\\`\\]`"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_is_triggered:2 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`int\\`\\, \\:py\\:class\\:\\`bool\\`\\]`"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.osc_single:2
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_disable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_enable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit:9
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_disable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_enable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_disable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_enable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_disable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_enable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_disable:2
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_enable:2 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`int\\`\\, \\:py\\:obj\\:\\`None\\`\\]`"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.reconnect:1 of
msgid "Reconnect to cracker device."
msgstr "重新连接"

#: cracknuts.cracker.cracker_basic.CrackerBasic.send_and_receive:1 of
msgid "Send message to cracker device."
msgstr "发送消息到设备。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.send_and_receive:4 of
msgid "The byte message to send."
msgstr "待发送的消息"

#: cracknuts.cracker.cracker_basic.CrackerBasic.send_and_receive:6 of
msgid "Received message in format: (status, message)."
msgstr "接收的消息，格式：(status, message)。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.send_with_command:2 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`int\\`\\, \\:py\\:class\\:\\`bytes\\` \\| "
"\\:py\\:obj\\:\\`None\\`\\]`"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_address:1 of
msgid "Set the device address in tuple format."
msgstr "设置元组格式的地址"

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_ip_port:1 of
msgid "Set the device IP address."
msgstr "设置设备IP地址"

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_ip_port:4 of
msgid "IP address."
msgstr "IP地址"

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_ip_port:7 of
msgid "Port."
msgstr "端口"

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_logging_level:1 of
msgid "Set logging level."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_logging_level:4 of
msgid "The logging level, debug, info, warning, error,"
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_uri:1 of
msgid "Set the device address in URI format."
msgstr "设置URI格式的地址"

#: cracknuts.cracker.cracker_basic.CrackerBasic.set_uri:4 of
msgid "URI."
msgstr ""

#: cracknuts.cracker.cracker_basic.CrackerBasic.sync_config_to_cracker:1
#: cracknuts.cracker.cracker_s1.CrackerS1.sync_config_to_cracker:1 of
msgid "Sync config to cracker."
msgstr "同步配置到Cracker"

#: cracknuts.cracker.cracker_basic.CrackerBasic.sync_config_to_cracker:3
#: cracknuts.cracker.cracker_s1.CrackerS1.sync_config_to_cracker:3 of
msgid ""
"To prevent configuration inconsistencies between the host and the device,"
" so all configuration information needs to be written to the device. User"
" should call this function before get data from device."
msgstr "为了防止上位机与设备间的配置信息不同步，在获取数据前用户需要调用该方法同步配置到设备。"

#: cracknuts.cracker.cracker_basic.CrackerBasic.sync_config_to_cracker:7
#: cracknuts.cracker.cracker_s1.CrackerS1.sync_config_to_cracker:7 of
msgid ""
"NOTE: This function is currently ignored and will be resumed after all "
"Cracker functions are completed."
msgstr "注意：这个方法暂时无用，后期功能完整后再开启。"

#: cracknuts.cracker.cracker_s1.ConfigS1:1 of
msgid "Bases: :py:class:`~cracknuts.cracker.cracker_basic.ConfigBasic`"
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1:1 of
msgid ""
"Bases: :py:class:`~cracknuts.cracker.cracker_basic.CrackerBasic`\\ "
"[:py:class:`~cracknuts.cracker.cracker_s1.ConfigS1`]"
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_config:1
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_config:1 of
msgid "Config the SPI."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_config:4 of
msgid "The address of the device."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_config:7 of
msgid "The speed of the device."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_config:9
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_reset:3
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_config:12
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_reset:3
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_config:15
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_reset:3 of
#, fuzzy
msgid "The device response status."
msgstr "设置设备IP地址"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_receive:1 of
msgid "Receive data through the I2C protocol."
msgstr "通过I2C协议接收数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_receive:4
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transceive:7
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive:10
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_receive:4
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transceive:7
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive:10
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive:7 of
msgid "The number of received data bytes."
msgstr "接收数据的长度"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_receive:7
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transceive:10
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit:7
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive:13
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_receive:7
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transceive:10
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit:7
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive:13
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive:10 of
msgid "Whether the transmit trigger is enabled."
msgstr "是否开启触发"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_receive:8
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transceive:12
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive:15 of
#, fuzzy
msgid ""
"The device response status and the data received from the I2C device. "
"Return None if an exception is caught."
msgstr "通过I2C接收到的数据，如果出现异常则返回None。"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_reset:1 of
msgid "Reset the I2C."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transceive:1 of
msgid "Send and receive data without delay through the I2C protocol."
msgstr "没有延迟的通过I2C发送接收数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transceive:4
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit:4
#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive:4
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive:4 of
msgid "The data to be sent."
msgstr "待发送的数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit:1 of
msgid "Send data through the I2C protocol."
msgstr "通过I2C协议发送数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive:1 of
msgid "Send and receive data with delay through the I2C protocol."
msgstr "有延迟的通过I2C发送和接收数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive:7 of
msgid ""
"Transmit delay duration, in nanoseconds, with a minimum effective "
"duration of 10 nanoseconds."
msgstr "传输延迟，单位：纳秒，最小有效值：10纳秒。"

#: cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_freq:1 of
msgid "Set nut clock."
msgstr "设置NUT时钟。"

#: cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_freq:4 of
msgid "The clock of the nut in kHz"
msgstr "时钟：单位 kHz"

#: cracknuts.cracker.cracker_s1.CrackerS1.nut_timeout_ms:1 of
#, fuzzy
msgid "Set nut timeout."
msgstr "设置NUT时钟。"

#: cracknuts.cracker.cracker_s1.CrackerS1.nut_timeout_ms:4 of
msgid "Nut timeout."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_mv:1 of
msgid "Set nut voltage."
msgstr "设置NUT时钟。"

#: cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_mv:4 of
msgid "Nut voltage, in milli volts (mV)."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_disable:1 of
msgid "Disable osc analog."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_disable:4
#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_enable:4 of
msgid "Osc analog."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_enable:1 of
msgid "Enable osc analog."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_gain:1 of
msgid "Set analog gain."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_gain:4 of
msgid "Analog channel."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_gain:7 of
msgid "Analog gain."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_phase:1 of
msgid "Set sample phase."
msgstr "设置osc采样相位"

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_phase:4 of
msgid "Sample phase."
msgstr "相位"

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_rate:1 of
msgid "Set osc sample rate"
msgstr "设置osc采样率"

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_rate:4 of
msgid "The sample rate in kHz, one of (65000, 48000, 24000, 12000, 8000, 4000)"
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_delay:1 of
#, fuzzy
msgid "Set sample delay."
msgstr "设置osc采样相位"

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_delay:4 of
#, fuzzy
msgid "Sample delay."
msgstr "相位"

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_len:1 of
msgid "Set sample length."
msgstr "设置osc采样长度"

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_len:4 of
msgid "Sample length."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_set_analog_channel_enable:1 of
msgid "Set analog channel enable."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_set_analog_channel_enable:4 of
msgid "Channel to enable."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_set_analog_channel_enable:7 of
msgid "Enable or disable."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_edge:1 of
msgid "Set trigger edge."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_edge:4 of
msgid ""
"Trigger edge. 'up', 'down', 'either' or 0, 1, 2 represent up, down, "
"either, respectively."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_level:1 of
msgid "Set trigger edge level."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_level:4 of
msgid "Edge level."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_mode:1 of
msgid "Set trigger mode."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_mode:4 of
msgid "Trigger mode. Trigger mode: 0 for edge, 1 for wave."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_source:1 of
msgid "Set trigger source."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_source:4 of
msgid ""
"Trigger source: 'N', 'A', 'B', 'P', or 0, 1, 2, 3 represent Nut, Channel "
"A, Channel B, and Protocol, respectively."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.register_read:1 of
msgid "Read register."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.register_read:4
#: cracknuts.cracker.cracker_s1.CrackerS1.register_write:4 of
msgid "Base address of the register."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.register_read:7
#: cracknuts.cracker.cracker_s1.CrackerS1.register_write:7 of
msgid "Offset of the register."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.register_read:9 of
#, fuzzy
msgid ""
"The device response status and the value read from the register or None "
"if an exception is raised."
msgstr "通过SPI协议接收的数据，如果出现异常则返回空。"

#: cracknuts.cracker.cracker_s1.CrackerS1.register_write:1 of
msgid "Write register."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.register_write:10 of
msgid "Data to write."
msgstr "待发送的数据。"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_config:4 of
msgid "SPI speed."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_config:7 of
msgid "Clock polarity."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_config:10 of
#, fuzzy
msgid "Clock phase."
msgstr "相位"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_receive:1 of
msgid "Receive data through the SPI protocol."
msgstr "通过SPI协议接收数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_receive:9
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transceive:12
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive:15 of
#, fuzzy
msgid ""
"The device response status and the data received from the SPI device. "
"Return None if an exception is caught."
msgstr "通过SPI协议接收的数据，如果出现异常则返回空。"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_reset:1 of
msgid "Reset the SPI hardware."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transceive:1 of
msgid "Send and receive data without delay through the SPI protocol."
msgstr "没有延迟的通过SPI发送和接收数据。"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transceive:4
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit:4
#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive:4 of
msgid "The data to send."
msgstr "待发送的数据。"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit:1 of
msgid "Send data through the SPI protocol."
msgstr "通过SPI发送数据。"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit:9 of
msgid "The device response status and the data received from the SPI device."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive:1 of
msgid "Send and receive data with delay through the SPI protocol."
msgstr "有延迟的通过SPI发送和接收数据。"

#: cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive:7 of
msgid ""
"The transmit delay in milliseconds, with a minimum effective duration of "
"10 nanoseconds."
msgstr "发送数据延迟，单位：纳秒，最小有效值： 10纳秒"

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_config:1 of
msgid "Config uart."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_config:4 of
msgid "The baudrate of the uart."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_config:7 of
msgid "The bytesize of the uart."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_config:10 of
msgid "The parity of the uart."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_config:13 of
msgid "The stopbits of the uart."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_clear:1 of
msgid "Clear all the remaining data in the UART receive FIFO."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_clear:3
#: cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_dump:3 of
msgid "The device response status and all the remaining unread bytes."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_dump:1 of
msgid "Read all the remaining data from the UART receive FIFO."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_remained:1 of
msgid "Get the number of remaining unread bytes in the UART receive FIFO."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_remained:3 of
msgid "The device response status and the number of remaining unread bytes."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_reset:1 of
msgid "Reset the UART hardware."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive:1 of
#, fuzzy
msgid "Transmit and receive data through the UART protocol."
msgstr "通过SPI协议接收数据"

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive:13 of
msgid "Timeout in milliseconds."
msgstr ""

#: cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive:15 of
msgid "The device response status and the data received from the device."
msgstr ""

#~ msgid "CommonCommands"
#~ msgstr ""

#~ msgid ""
#~ "The generic command proxy configuration "
#~ "class defines the `CNP` communication "
#~ "code for general devices. For details,"
#~ " refer to the `CNP` protocol "
#~ "documentation."
#~ msgstr "通用指令代理配置类，定义了通用设备的 `CNP` 通讯代码。详情参考 `CNP` 协议说明。"

#~ msgid "CommonConfig"
#~ msgstr ""

#~ msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~cracknuts.cracker.cracker.CommonConfig\\``"
#~ msgstr ""

#~ msgid "BaseCracker"
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~abc.ABC`, :py:class:`~typing.Generic`\\"
#~ " [:py:obj:`~cracknuts.cracker.cracker.T`]"
#~ msgstr ""

#~ msgid "CommonCracker"
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~cracknuts.cracker.cracker.BaseCracker`\\ "
#~ "[:py:obj:`~cracknuts.cracker.cracker.T`], :py:class:`~abc.ABC`"
#~ msgstr ""

#~ msgid "CrackerS1Config"
#~ msgstr ""

#~ msgid "Bases: :py:class:`~cracknuts.cracker.cracker.CommonConfig`"
#~ msgstr ""

#~ msgid "CrackerS1"
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~cracknuts.cracker.cracker.CommonCracker`\\"
#~ " [:py:class:`~cracknuts.cracker.cracker_s1.CrackerS1Config`]"
#~ msgstr ""

#~ msgid ""
#~ "The generic configuration object contains "
#~ "various configuration items for general "
#~ "devices. If a device has non-"
#~ "generic configurations, the class should "
#~ "be inherited and extended."
#~ msgstr "通用配置对象，包含通用设备的各个配置项目，如果设备有非通用配置，需要继承该类并扩展。"

#~ msgid ""
#~ "Bind a callback which will be call"
#~ " when the key field is updated. "
#~ "The end user should use this."
#~ msgstr "绑定配置回调函数，当配置更新时，该函数被调用 最终用户不要使用该函数"

#~ msgid "a filed name of class `CommonConfig`"
#~ msgstr "`CommonConfig` 类对象的字段"

#~ msgid "The sample rate in kHz"
#~ msgstr "采样率，单位：kHz"

#~ msgid ""
#~ ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`str\\` \\|"
#~ " \\:py\\:obj\\:\\`None\\``"
#~ msgstr ""

#~ msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~numpy.ndarray\\``"
#~ msgstr ""

#~ msgid ""
#~ ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bytes\\` \\|"
#~ " \\:py\\:obj\\:\\`None\\``"
#~ msgstr ""

#~ msgid "I2C device address, 7-bit length."
#~ msgstr "I2C设备地址，7-bit长度"

#~ msgid "Set nut enable."
#~ msgstr "设置NUT时钟。"

#~ msgid ""
#~ "Enable or disable. 0 for disable, "
#~ "1 for enable if specified as a "
#~ "integer."
#~ msgstr ""

#~ msgid "Set nut raw voltage."
#~ msgstr ""

#~ msgid "Set analog bias voltage."
#~ msgstr ""

#~ msgid "Voltage to set. unit: mV."
#~ msgstr ""

#~ msgid "Set analog coupling."
#~ msgstr ""

#~ msgid "1 for DC and 0 for AC."
#~ msgstr ""

#~ msgid "Set analog voltage."
#~ msgstr ""

#~ msgid "The sample rate in kHz, one of (62500, 48000, 24000, 12000, 8000, 4000)"
#~ msgstr ""

