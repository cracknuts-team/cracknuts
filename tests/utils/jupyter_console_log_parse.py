log = '''
{"msg_id": "c632ba18-38f1dd9dff6199aa5cf49268_18820_175", "msg_type": "error", "username": "username", "session": "c632ba18-38f1dd9dff6199aa5cf49268", "date": "2025-10-12T08:49:15.185571Z", "version": "5.3"}{"date": "2025-10-12T08:49:14.638000Z", "msg_id": "caa5e513-6e15-401d-a663-5338068f7f9e", "msg_type": "comm_msg", "session": "83824c51-f3c0-4503-b54a-90407077895b", "username": "", "version": "5.2"}{}{"traceback": ["\u001b[31m---------------------------------------------------------------------------\u001b[39m", "\u001b[31mTypeError\u001b[39m                                 Traceback (most recent call last)", "\u001b[36mFile \u001b[39m\u001b[32mD:\\work\\ahcc\\90.project\\cracknuts\\src\\cracknuts\\jupyter\\panel.py:21\u001b[39m, in \u001b[36mMsgHandlerPanelWidget._msg_handle\u001b[39m\u001b[34m(self, widget, content, buffers)\u001b[39m\n\u001b[32m     19\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m key \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m._msg_handlers:\n\u001b[32m     20\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m handler \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m._msg_handlers[key]:\n\u001b[32m---> \u001b[39m\u001b[32m21\u001b[39m         \u001b[43mhandler\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n", "\u001b[36mFile \u001b[39m\u001b[32mD:\\work\\ahcc\\90.project\\cracknuts\\src\\cracknuts\\jupyter\\acquisition_panel.py:101\u001b[39m, in \u001b[36mAcquisitionPanelWidget.msg_acq_status_changed\u001b[39m\u001b[34m(self, changed)\u001b[39m\n\u001b[32m     99\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m status == \u001b[33m\"\u001b[39m\u001b[33mtest\u001b[39m\u001b[33m\"\u001b[39m:\n\u001b[32m    100\u001b[39m     \u001b[38;5;28mself\u001b[39m.before_test()\n\u001b[32m--> \u001b[39m\u001b[32m101\u001b[39m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43macquisition\u001b[49m\u001b[43m.\u001b[49m\u001b[43mtest\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    102\u001b[39m \u001b[43m        \u001b[49m\u001b[43msample_offset\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43msample_offset\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    103\u001b[39m \u001b[43m        \u001b[49m\u001b[43mtrigger_judge_wait_time\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mtrigger_judge_wait_time\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    104\u001b[39m \u001b[43m        \u001b[49m\u001b[43mtrigger_judge_timeout\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mtrigger_judge_timeout\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    105\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdo_error_max_count\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mdo_error_max_count\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    106\u001b[39m \u001b[43m        \u001b[49m\u001b[43mtrace_fetch_interval\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mtrace_fetch_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    107\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    108\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m status == \u001b[33m\"\u001b[39m\u001b[33mrun\u001b[39m\u001b[33m\"\u001b[39m:\n\u001b[32m    109\u001b[39m     \u001b[38;5;28mself\u001b[39m.before_run()\n", "\u001b[36mFile \u001b[39m\u001b[32mD:\\work\\ahcc\\90.project\\cracknuts\\src\\cracknuts\\acquisition\\glitch_acquisition.py:181\u001b[39m, in \u001b[36mGlitchAcquisition.test\u001b[39m\u001b[34m(self, count, sample_length, sample_offset, trigger_judge_wait_time, trigger_judge_timeout, do_error_max_count, do_error_handler_strategy, trace_fetch_interval)\u001b[39m\n\u001b[32m    169\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mtest\u001b[39m(\n\u001b[32m    170\u001b[39m     \u001b[38;5;28mself\u001b[39m,\n\u001b[32m    171\u001b[39m     count=-\u001b[32m1\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m    178\u001b[39m     trace_fetch_interval: \u001b[38;5;28mfloat\u001b[39m = \u001b[32m2.0\u001b[39m,\n\u001b[32m    179\u001b[39m ):\n\u001b[32m    180\u001b[39m     \u001b[38;5;28mself\u001b[39m._is_in_glitch_mode = \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m181\u001b[39m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mglitch_test\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    182\u001b[39m \u001b[43m        \u001b[49m\u001b[43msample_length\u001b[49m\u001b[43m=\u001b[49m\u001b[43msample_length\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    183\u001b[39m \u001b[43m        \u001b[49m\u001b[43msample_offset\u001b[49m\u001b[43m=\u001b[49m\u001b[43msample_offset\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    184\u001b[39m \u001b[43m        \u001b[49m\u001b[43mtrigger_judge_wait_time\u001b[49m\u001b[43m=\u001b[49m\u001b[43mtrigger_judge_wait_time\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    185\u001b[39m \u001b[43m        \u001b[49m\u001b[43mtrigger_judge_timeout\u001b[49m\u001b[43m=\u001b[49m\u001b[43mtrigger_judge_timeout\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    186\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdo_error_max_count\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdo_error_max_count\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    187\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdo_error_handler_strategy\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdo_error_handler_strategy\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    188\u001b[39m \u001b[43m        \u001b[49m\u001b[43mtrace_fetch_interval\u001b[49m\u001b[43m=\u001b[49m\u001b[43mtrace_fetch_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    189\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n", "\u001b[36mFile \u001b[39m\u001b[32mD:\\work\\ahcc\\90.project\\cracknuts\\src\\cracknuts\\acquisition\\glitch_acquisition.py:202\u001b[39m, in \u001b[36mGlitchAcquisition.glitch_test\u001b[39m\u001b[34m(self, sample_length, sample_offset, trigger_judge_wait_time, trigger_judge_timeout, do_error_max_count, do_error_handler_strategy, trace_fetch_interval)\u001b[39m\n\u001b[32m    191\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mglitch_test\u001b[39m(\n\u001b[32m    192\u001b[39m     \u001b[38;5;28mself\u001b[39m,\n\u001b[32m    193\u001b[39m     sample_length: \u001b[38;5;28mint\u001b[39m | \u001b[38;5;28;01mNone\u001b[39;00m = \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[32m   (...)\u001b[39m\u001b[32m    199\u001b[39m     trace_fetch_interval: \u001b[38;5;28mfloat\u001b[39m = \u001b[32m0.1\u001b[39m,\n\u001b[32m    200\u001b[39m ):\n\u001b[32m    201\u001b[39m     glitch_params = \u001b[38;5;28mself\u001b[39m._build_glitch_param_generator(\u001b[38;5;28mself\u001b[39m._cracker_g1.get_glitch_test_params())\n\u001b[32m--> \u001b[39m\u001b[32m202\u001b[39m     \u001b[38;5;28mself\u001b[39m._logger.warning(\u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mglitch_params: \u001b[39m\u001b[38;5;132;43;01m{\u001b[39;49;00m\u001b[43mglitch_params\u001b[49m\u001b[38;5;132;43;01m}\u001b[39;49;00m\u001b[33m\"\u001b[39m)\n\u001b[32m    203\u001b[39m     \u001b[38;5;28mself\u001b[39m.set_glitch_params(glitch_params)\n\u001b[32m    204\u001b[39m     \u001b[38;5;28mself\u001b[39m._logger.warning(\u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mcount is \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mself\u001b[39m.trace_count\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m\"\u001b[39m)\n", "\u001b[31mTypeError\u001b[39m: __str__ returned non-string (type dict)"], "ename": "TypeError", "evalue": "__str__ returned non-string (type dict)"}
'''

s = log.index('{"traceback": [')
e = log.index('], "ename":')
for line in log[s+15:e].split(', '):
    print(line)

